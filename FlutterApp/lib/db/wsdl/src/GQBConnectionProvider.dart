
//------------------------------------------------------------------------
//
// Generated by www.easywsdl.com
// Version: 8.0.1.0
//
// Created by Quasar Development 
//
// This class has been generated for test purposes only and cannot be used in any commercial project.
// To use it in commercial project, you need to generate this class again with Premium account.
// Check https://EasyWsdl.com/Payment/PremiumAccountDetails to see all benefits of Premium account.
//
// Licence: CA3F4CEB7486F6668BD6F181D6CA68F608603F641897C20DF217C55FE3F3416F64E665190F35F5CE91CF8F38D5FB78FB96170CE35D755393898FFBDA2F093BF2
//------------------------------------------------------------------------
part of com.example.testSoap.wcf;

abstract class GQBConnectionProvider
{
    Future<GQBResponseData> sendRequest(Uri url,String requestBody,Map< String,String> httpHeaders,GQBRequestResultHandler handler);
}

class GQBResponseData{
    final Map<String,String> headers;
    final Uint8List bodyBytes;

    GQBResponseData({
        required this.headers,
        required this.bodyBytes,
    });
}

class GQBHttpConnectionProvider implements GQBConnectionProvider{
    @override
    Future< GQBResponseData> sendRequest(Uri url,String requestBody, Map< String, String> httpHeaders,GQBRequestResultHandler handler) async{
        BaseRequest baseRequest;
        {
            var request=Request("POST", url);
            request.body=requestBody;
            baseRequest=request;
        }

        baseRequest.headers.addAll(httpHeaders);
        var response = await baseRequest.send();
        // if (response.statusCode == 200) {
        //     print("success upload");
        // }
        return GQBResponseData(headers:response.headers,bodyBytes:await response.stream.toBytes());
    }

}