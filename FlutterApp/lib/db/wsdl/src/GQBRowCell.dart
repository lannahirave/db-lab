//------------------------------------------------------------------------
//
// Generated by www.easywsdl.com
// Version: 8.0.1.0
//
// Created by Quasar Development 
//
// This class has been generated for test purposes only and cannot be used in any commercial project.
// To use it in commercial project, you need to generate this class again with Premium account.
// Check https://EasyWsdl.com/Payment/PremiumAccountDetails to see all benefits of Premium account.
//
// Licence: CA3F4CEB7486F6668BD6F181D6CA68F608603F641897C20DF217C55FE3F3416F64E665190F35F5CE91CF8F38D5FB78FB96170CE35D755393898FFBDA2F093BF2
//------------------------------------------------------------------------
part of com.example.testSoap.wcf;

class GQBRowCell  implements GQBISerializableObject
{
    XmlElement?  __source;
    
    XmlElement? getOriginalXmlSource(){
        return __source;
    }
    String? Name;
    String? Value;


   
    @override
    Future<void> serialize(XmlElement __parent, GQBRequestResultHandler __handler) async
    {


        var __NameItemElement=__handler.writeElementWithType(Name,String, "Name", "http://schemas.datacontract.org/2004/07/DB.WebService.Contract", __parent, true);
        if(__NameItemElement != null)
        {
            __NameItemElement.innerText = this.Name.toString();
        }

        var __ValueItemElement=__handler.writeElementWithType(Value,String, "Value", "http://schemas.datacontract.org/2004/07/DB.WebService.Contract", __parent, true);
        if(__ValueItemElement != null)
        {
            __ValueItemElement.innerText = this.Value.toString();
        }
    }
    
    @override
    Future<void> loadWithXml(XmlElement __node, GQBRequestResultHandler __handler) async
    {
        __source=__node;
        for(int i=0;i < __node.children.length;i++)
        {
            var __child=__node.children[i];
            if(__child is XmlElement)
            {
                if(!await loadProperty(__child,__handler))
                {
                }
            }
        }
    }
    
    
    Future<bool> loadProperty(XmlElement __node, GQBRequestResultHandler __handler) async
    {
        if( __node.name.local=="Name")
        {
            if( GQBHelper.isValue(__node,  "Name"))
            {
                this.Name = __node.innerText;
            }
            return true;
        }
        if( __node.name.local=="Value")
        {
            if( GQBHelper.isValue(__node,  "Value"))
            {
                this.Value = __node.innerText;
            }
            return true;
        }
        return false;
    }
    
}
